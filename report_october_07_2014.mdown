![Alt text](http://rrezarta-krasniqi.github.io/esquared.jpg) 
<hr>
##### :date: October, 07 2014 


The Google Dataset Mapping from Original Dataset
--------------------------------

### Data Download and Preprocessing

~~~MySQL
CREATE TABLE google_dataset_unsharded  
( 
  id                    	int(11) AUTO_INCREMENT NOT NULL,
  test_suite_name       	varchar(2048) NOT NULL,
  test_suite_mapped_id  	varchar(128) NOT NULL,
  change_request        	int(11) NOT NULL,
  stage                 	varchar(128) NOT NULL,
  test_status           	varchar(128) NOT NULL,
  earliest_execution_time varchar(128) NOT NULL,
  latest_execution_time   varchar(128) NOT NULL,
  test_size             	varchar(128) NOT NULL,
  shard_number          	int(11) NOT NULL,
  run_number            	int(11) NOT NULL,
  test_language         	varchar(128) NOT NULL,
  PRIMARY KEY(id)
);

GO
CREATE INDEX ix_google_dataset_mapped_test_status USING BTREE 
  ON google_dataset_unsharded(test_status)
GO
CREATE INDEX ix_google_dataset_mapped_test_size USING BTREE 
  ON google_dataset_unsharded(test_size)
GO
CREATE INDEX ix_google_dataset_mapped_test_language USING BTREE 
  ON google_dataset_unsharded(test_language)
GO
CREATE INDEX ix_google_dataset_mapped_stage USING BTREE 
  ON google_dataset_unsharded(stage)
GO

######################################################################################################
#Load CSV to Database - google_dataset_mapped
LOAD DATA INFILE '/path/google_dataset_unsharded_results.csv' INTO TABLE google_dataset_unsharded
FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' IGNORE 1 ROWS 
(@test_suite_name, @test_suite_mapped_id, change_request, @stage, @test_status, @earliest_launch_time, 
 @latest_launch_time, execution_time, @test_size, shard_number, run_number, @test_language)

  SET test_suite_name = REPLACE(REPLACE(@test_suite_name, ',', ''), '"', '' ),
      test_suite_mapped_id = REPLACE(REPLACE(@test_suite_mapped_id, ',', ''), '"', '' ),
      stage = REPLACE(REPLACE(@stage, ',', ''), '"', '' ),
      test_status = REPLACE(REPLACE(@test_status, ',', ''), '"', '' ),
      earliest_launch_time = REPLACE(REPLACE(@earliest_launch_time, ',', ''), '"', '' ),
      latest_launch_time = REPLACE(REPLACE(@latest_launch_time, ',', ''), '"', '' ),
      test_size = REPLACE(REPLACE(@test_size, ',', ''), '"', '' ),
      test_language = REPLACE(REPLACE(@test_language, ',', ''), '"', '' );
~~~


### Mapping From Original Google Dataset


:small_red_triangle_down: **Query Implementation:**

~~~mysql
SELECT 
       test_suite_mapped_id,
       test_suite_name,
       change_request,
       run_number,
       stage,
       (CASE WHEN test_status NOT LIKE "%PASSED%" THEN "FAILED"
             WHEN test_status NOT LIKE "%FAILED%" THEN "PASSED" 
             WHEN test_status REGEXP "(PASSED) (FAILED)|(FAILED) (PASSED)" THEN "FAILED" 
             ELSE "NA" END) test_status,
       earliest_launch_time,
       latest_launch_time,
       execution_time,
       test_size,
       shard_number,       
       test_language
FROM 
    (
     SELECT 
            test_suite_mapped_id,
            test_suite_name,
            change_request, 
            stage,
            MIN(DATE_FORMAT(launch_time,"%b %d %Y %h:%i:%s %p")) AS earliest_launch_time,
            MAX(DATE_FORMAT(launch_time,"%b %d %Y %h:%i:%s %p")) AS latest_launch_time,
            SUM(TRUNCATE(((((execution_time % (1000 * 60 * 60)) % (1000 * 60)) / 1000)),2)) AS execution_time,
            test_size,
            COUNT(shard_number) AS shard_number,
            SUM(run_number) AS run_number,
            test_language,
            GROUP_CONCAT(test_status SEPARATOR " ") AS test_status
        FROM google_dataset
  GROUP BY test_suite_mapped_id, change_request, launch_time, run_number
) AS T 
~~~

:bulb: From the above query, the following are the results running the inner query:




### Dataset Analysis


**1. How many distinct test suite dose the Google Dataset contain?**

---------

* Total Distinct test suites are: **5555**

:small_red_triangle_down: **Query Implementation:**

~~~ MySQL
        SELECT COUNT(DISTINCT test_suite_mapped_id) AS distinct_test_suits 
        FROM google_dataset_mapped;
~~~

<br/>

**2. How many distinct test suite dose the Google Dataset contain?**

---------

* Total records are: **3468948**

:small_red_triangle_down: **Query Implementation:**

~~~ MySQL
        SELECT COUNT(*) 
        FROM google_dataset
~~~


<br/>

---------

**3. What is the total size of Google Dataset that is unsharded?**

---------

* There are also **2658408** records in the entire dataset

:small_red_triangle_down: **Query Implementation:**
~~~ MySQL

        SELECT COUNT(*) total_unsharded_records 
        FROM google_dataset_unsharded;
~~~

<br/>

---------

**4. How many distinct test_suites and distinct change requests are in the dataset?**

---------
* There are total of  **5555** distinct test_suites through the entire dataset
* There are total of **6213** distinct change request through the entire dataset

  <br> :o:&nbsp;  **4520** of them are run during the ECT (POST) phase, wherease
  <br> :o:&nbsp;  **1693** of them are run during ICT (PRE) phase

:small_red_triangle_down: **MySQL Implementation:**

~~~ MySQL
    SELECT COUNT(*) AS total_change_requests, stage 
      FROM (  
            SELECT change_request, 
                   stage
              FROM google_dataset_unsharded 
             GROUP BY change_request, stage
           ) AS Q
    GROUP BY stage      
~~~

:small_red_triangle_down: **Results:**

| total_change_requests |    Stage   | Total  |
|-----------------------|:----------:|:------:|
| 4520                  |  	 POST 	 |  6213  |
| 1693                  |    PRES    |        |

<br>


---------

**5. How many distinct test_suite executions pass and fail, and what is their correspond average execution at each stage?**

---------


~~~MySQL
 SELECT COUNT(DISTINCT test_suite_mapped_id) AS test_suite_mapped_id, 
         test_status, 
         stage, 
         AVG(execution_time) AS avg_execution_time
    FROM google_dataset_unsharded
GROUP BY stage, test_status
~~~


:small_red_triangle_down: **Query Results For POST phase:**


| test_suite_mapped_id  |  test_status  |   stage   |  avg_execution  |
|-----------------------|:-------------:|:---------:|:---------------:|
|          154          |     FAILED    |    POST   |     91.5672     |
|          5536         |     PASSED    |    POST   |     14.0935     |
|          205          |     FAILED    |    PRES   |     88.6291     |
|          5555         |     PASSED    |    PRES   |     12.0166     |



<br>

**Other Computations**

--------

**6. What is total failure and failure rate for different test suite executions?**

--------

:small_red_triangle_down: **MySql Implementation:** (test_failures.sql)

~~~MySQL
SELECT  test_suite_mapped_id,
        change_request,
        IF((failed > 0 and passed > 0), "FAILED", "NONE") AS test_status,
        stage, 
        failed, 
        passed,
        AVG(execution_time) AS avg_execution_time_in_sec,     
        TRUNCATE((failed * 100)/(failed + passed),2) AS failure_rate
 FROM
(

    SELECT test_suite_mapped_id, 
           change_request,
           test_status,
           stage,
           execution_time, 
           SUM(IF(test_status = 'FAILED', 1, 0)) AS failed,
           SUM(IF(test_status = 'PASSED', 1, 0)) AS passed
      FROM google_dataset_unsharded
     WHERE stage = "POST"
  GROUP BY test_suite_mapped_id
       ) AS MM
GROUP BY test_suite_mapped_id
HAVING failure_rate > 0 
~~~


:small_red_triangle_down: **Results:** 

![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/test_failure_rates_results.jpg)

There are **154** total failures


:small_red_triangle_down: **Graph Representation:**

![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/test_failure_rates_graph.jpg)

<br>


### Categorization Of Dataset


--------

**7. What is the number of passes and failures of test suites grouped by language, test size and stage?**

--------

~~~MySQL
SELECT test_language, 
       test_size, 
       stage, 
       failed,
       passed, 
       SUM(failed + passed) AS total,
       AVG(execution_time) AS avg_execution_time_sec,
       TRUNCATE(failed *100/(failed + passed), 2) AS rate_failure
  FROM
   (
      SELECT test_language,
             test_size,
             stage,
             execution_time,
             SUM(if(test_status = "FAILED",1,0)) AS failed,
             SUM(if(test_status = "PASSED",1,0)) AS passed
        FROM google_dataset_unsharded 
    GROUP BY test_size, test_language, stage
   ) AS Q
   GROUP BY test_size, test_language, stage
   ORDER BY test_language, test_size ASC
~~~


:small_red_triangle_down: **Results:**

![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/group_by_lang_size_stage_results.jpg)


:small_red_triangle_down: **Graph Representation:**

![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/group_by_lang_size_stage_graph.jpg)


<br>


### Distribution of Data Across Days


**Distribution of Number of Change Requests by Days**

--------

**8. What is the number of total change requests distributed across days?**

--------
:small_red_triangle_down: **MySql Implementation:** (total_num_change_requests_per_day.sql)

~~~MySQL
SELECT COUNT(change_request) AS num_change_requests, days, stage 
FROM
 (
    SELECT change_request, DATE_FORMAT(STR_TO_DATE(earliest_launch_time, '%b %d %Y %h:%i:%s %p'), '%d') AS days,stage
      FROM google_dataset_unsharded
 ) AS tmp
GROUP BY days, stage;
~~~

:small_red_triangle_down: **Results:**

![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/total_num_change_requests_per_day_results.jpg)



:small_red_triangle_down: **Graph Representation:**

![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/total_num_change_requests_per_day_graph.jpg)




**Distribution of Number of Test Suite Executions by Days**


--------

**9. What is the number of total test suite executions distributed across days?**

--------

:small_red_triangle_down: **MySql Implementation:** (total_test_executions_per_day.sql)

~~~MySQL
SELECT COUNT(DISTINCT test_suite_mapped_id) AS test_suite_mapped_id, days, stage 
FROM
 (
    SELECT change_request, date_format(STR_TO_DATE(earliest_launch_time, '%b %d %Y %h:%i:%s %p'), '%d') AS days,stage
      FROM google_dataset_unsharded
 ) AS tmp
GROUP BY days, stage;
~~~

:small_red_triangle_down: **Results:**

![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/total_test_executions_per_day_results.jpg)




:small_red_triangle_down: **Graph Representation:**


![Alt text](http://rrezarta-krasniqi.github.io/october_07_2014/total_test_executions_per_day_graph.jpg)


<hr>
:copyright: Rrezarta Krasniqi - University of Nebraska - Lincoln